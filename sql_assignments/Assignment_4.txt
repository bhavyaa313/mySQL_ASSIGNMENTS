1.      USE `northwind`;
 	DROP procedure IF EXISTS `spFreightAvg`;

	DELIMITER $$
	USE `northwind`$$
	CREATE PROCEDURE spFreightAvg(IN pCustomerId VARCHAR(10), OUT pAvgFreight DECIMAL(10,2))
	BEGIN
    	SELECT AVG(Freight) INTO pAvgFreight
    	FROM `orders`
    	WHERE CustomerID = pCustomerId;
	END$$

	DELIMITER ;



	DELIMITER //

	-- Trigger for BEFORE INSERT
	CREATE TRIGGER FreightAverageBeforeInsert
	BEFORE INSERT ON orders
	FOR EACH ROW
	BEGIN
    	DECLARE Freight DECIMAL(10,2);
    	DECLARE avgFreight DECIMAL(10,2);
    
    	SET Freight = NEW.Freight;
    
    	CALL spFreightAvg(NEW.CustomerID, avgFreight);
    
    	IF avgFreight < Freight THEN
        	SIGNAL SQLSTATE '45000'
        	SET MESSAGE_TEXT = 'Freight exceeds the average freight';
    	END IF;
	END //

	// Change delimiter back to semicolon
	DELIMITER ;
	
	-- Trigger for BEFORE UPDATE
	DELIMITER //

	CREATE TRIGGER FreightAverageBeforeUpdate
	BEFORE UPDATE ON orders
	FOR EACH ROW
	BEGIN
    		DECLARE Freight DECIMAL(10,2);
    		DECLARE avgFreight DECIMAL(10,2);
    
    		SET Freight = NEW.Freight;
    
    	CALL spFreightAvg(NEW.CustomerID, avgFreight);
    
    		IF avgFreight < Freight THEN
        	SIGNAL SQLSTATE '45000'
        	SET MESSAGE_TEXT = 'Freight exceeds the average freight';
    	END IF;
	END //

	DELIMITER ;




2 . 	USE `northwind`;
	DROP procedure IF EXISTS `Query2`;
	DELIMITER $$
	USE `northwind`$$
	CREATE PROCEDURE `Query2` ()
	BEGIN
	select  o.ShipCountry, sum((od.UnitPrice*od.Quantity)) as sales , o.EmployeeID
	from orders as  o
	inner join orderdetails as od on o.orderID= od.orderID
	group by o.ShipCountry , o.EmployeeID;
	END$$

3.	DELIMITER ;

	USE `northwind`;
 	DROP procedure IF EXISTS `Query3`;

	DELIMITER $$
	USE `northwind`$$
	CREATE PROCEDURE `Query3` ()
	BEGIN
	select sum((od.UnitPrice*od.Quantity)) as sales,  YEAR(o.ShippedDate) as year from orderdetails as od
	inner join orders o on o.orderID= od.orderID and ShippedDate is not null
	group by  YEAR(o.ShippedDate);
	END$$

	DELIMITER ;


4.      USE `northwind`;
	DROP procedure IF EXISTS `Query4`;

	DELIMITER $$
	USE `northwind`$$
	CREATE PROCEDURE `Query4` ()
	BEGIN
	select  p.categoryID, sum((od.UnitPrice*od.Quantity)) as sales
	from products as  P
	inner join orderdetails as OD on P.productID= od.productID
	inner join categories as C on C.categoryID=p.categoryID
	group by p.categoryID;

	END$$
	
	DELIMITER ;


5. 	USE `northwind`;
	DROP procedure IF EXISTS `Query5`;

	DELIMITER $$
	USE `northwind`$$
	CREATE PROCEDURE `Query5` ()
	BEGIN
	select ProductID , ProductName , UnitPrice from products
	order by UnitPrice desc
	limit 10;
	END$$

	DELIMITER ;



6.   	USE `northwind`;
	DROP procedure IF EXISTS `Query6`;

	DELIMITER $$
	USE `northwind`$$
	CREATE PROCEDURE `Query6` ( IN OrderID int ,
	IN ProductID int ,
	IN UnitPrice decimal(10,4), 
	IN Quantity INT ,
	IN Discount double(8,0),
	IN CustomerID varchar(5) ,
	IN EmployeeID int ,
	IN OrderDate datetime ,
	IN RequiredDate datetime ,
	IN ShippedDate datetime ,
	IN ShipVia int ,
	IN Freight decimal(10,4) ,
	IN ShipName varchar(40) ,
	IN ShipAddress varchar(60) ,
	IN ShipCity varchar(15) ,
	IN ShipRegion varchar(15) ,
	IN ShipPostalCode varchar(10) ,
	IN ShipCountry varchar(15))
	BEGIN
	INSERT INTO orders (OrderID , ProductID, UnitPrice, Quantity , Discount)
	VALUES (OrderID , ProductID, UnitPrice, Quantity , Discount);
	INSERT INTO orders (OrderID ,CustomerID ,EmployeeID ,OrderDate ,RequiredDate,ShippedDate,Freight  ,ShipName  ,ShipAddress ,ShipCity,ShipRegion ,ShipPostalCode ,ShipCountry)
	VALUES (OrderID ,CustomerID ,EmployeeID ,OrderDate ,RequiredDate,ShippedDate,Freight  ,ShipName  ,ShipAddress ,ShipCity,ShipRegion ,ShipPostalCode ,ShipCountry);

	END$$

	DELIMITER ;






7.      USE `northwind`;
	DROP procedure IF EXISTS `Query7`;

	DELIMITER $$
	USE `northwind`$$
	CREATE PROCEDURE `Query7` (IN OrderID int ,
	IN ProductID int ,
	IN UnitPrice decimal(10,4), 
	IN Quantity INT ,
	IN Discount double(8,0),
	IN CustomerID varchar(5) ,
	IN EmployeeID int ,
	IN OrderDate datetime ,
	IN RequiredDate datetime ,
	IN ShippedDate datetime ,
	IN ShipVia int ,
	IN Freight decimal(10,4) ,
	IN ShipName varchar(40) ,
	IN ShipAddress varchar(60) ,
	IN ShipCity varchar(15) ,
	IN ShipRegion varchar(15) ,
	IN ShipPostalCode varchar(10) ,
	IN ShipCountry varchar(15))
	BEGIN
	UPDATE orderdetails
	SET OrderID = OrderID, ProductID = ProductID, UnitPrice = UnitPrice , Quantity = Quantity , Discount = Discount;
	UPDATE orders
	SET OrderID = OrderID, CustomerID = CustomerID, EmployeeID = EmployeeID, OrderDate = OrderDate , RequiredDate = RequiredDate , ShippedDate = ShippedDate , ShipVia = ShipVia, Freight = Freight, 
	ShipName = ShipName,  ShipAddress = ShipAddress, ShipCity = ShipCity , ShipRegion = ShipRegion , ShipPostalCode = ShipPostalCode , ShipCountry = ShipCountry;
	END$$

	DELIMITER ;





